{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\n\nconst OptionSliderItem = ({\n  options,\n  selected,\n  sliderIndex,\n  optionIndex,\n  optionSelect,\n  setOptionSelect\n}) => {\n  const router = useRouter();\n  const liRef = useRef();\n  useEffect(() => {\n    if (liRef.current) {\n      if (selected) {\n        liRef.current.classList.add('selected');\n      } else {\n        liRef.current.classList.remove('selected');\n      }\n\n      if (optionSelect.length === 1) {\n        if (!options.option.some(item => item.list[sliderIndex] == optionIndex)) {\n          liRef.current.classList.add('none');\n        } else {\n          liRef.current.classList.remove('none');\n        }\n      } else {\n        if (sliderIndex + 1 === optionSelect.length) {\n          if (!options.option.filter(item => item.list[0] === optionSelect[0]).some(item => item.list[sliderIndex] == optionIndex)) {\n            liRef.current.classList.add('none');\n          } else {\n            liRef.current.classList.remove('none');\n          }\n        } else {\n          if (!options.option.filter(item => item.list[sliderIndex + 1] === optionSelect[sliderIndex + 1]).some(item => item.list[sliderIndex] == optionIndex)) {\n            liRef.current.classList.add('none');\n          } else {\n            liRef.current.classList.remove('none');\n          }\n        }\n      }\n    }\n  }, [optionSelect, options]);\n  const onClickOption = useCallback(() => {\n    const selectedOption = optionSelect.map((item, index) => {\n      if (index === sliderIndex) {\n        return optionIndex + '';\n      } else {\n        return item;\n      }\n    });\n\n    if (liRef.current) {\n      if (liRef.current.classList.contains('none')) {\n        // 가능한 옵션 찾기\n        const availableOption = options.option.filter(item => item.list[sliderIndex] == optionIndex).sort((x, y) => x.list.reduce((x, y) => x + y) - y.list.reduce((x, y) => x + y))[0];\n        setOptionSelect([...availableOption.list]);\n      } else {\n        if (sliderIndex + 1 === options.listName.length) {\n          setOptionSelect([...selectedOption]);\n          const optionAsin = options.option.filter(item => item.list.every((item, sliderIndex) => item === selectedOption[sliderIndex]))[0].asin;\n          router.push(`/product/${optionAsin}`);\n        } else {\n          setOptionSelect([...selectedOption]);\n        }\n      }\n    }\n  }, [optionSelect]);\n  return __jsx(\"li\", {\n    ref: liRef,\n    onClick: onClickOption\n  }, __jsx(\"p\", {\n    className: \"optionName\"\n  }, options.listValue[options.listName[sliderIndex]][optionIndex]));\n};\n\nexport default OptionSliderItem;","map":{"version":3,"sources":["/Users/dayong/Desktop/dev/bmazon/components/product/optionSliderItem.jsx"],"names":["React","useCallback","useEffect","useRef","useRouter","OptionSliderItem","options","selected","sliderIndex","optionIndex","optionSelect","setOptionSelect","router","liRef","current","classList","add","remove","length","option","some","item","list","filter","onClickOption","selectedOption","map","index","contains","availableOption","sort","x","y","reduce","listName","optionAsin","every","asin","push","listValue"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\n\nconst OptionSliderItem = ({\n  options,\n  selected,\n  sliderIndex,\n  optionIndex,\n  optionSelect,\n  setOptionSelect,\n}) => {\n  const router = useRouter();\n  const liRef = useRef();\n\n  useEffect(() => {\n    if (liRef.current) {\n      if (selected) {\n        liRef.current.classList.add('selected');\n      } else {\n        liRef.current.classList.remove('selected');\n      }\n      if (optionSelect.length === 1) {\n        if (\n          !options.option.some(item => item.list[sliderIndex] == optionIndex)\n        ) {\n          liRef.current.classList.add('none');\n        } else {\n          liRef.current.classList.remove('none');\n        }\n      } else {\n        if (sliderIndex + 1 === optionSelect.length) {\n          if (\n            !options.option\n              .filter(item => item.list[0] === optionSelect[0])\n              .some(item => item.list[sliderIndex] == optionIndex)\n          ) {\n            liRef.current.classList.add('none');\n          } else {\n            liRef.current.classList.remove('none');\n          }\n        } else {\n          if (\n            !options.option\n              .filter(\n                item =>\n                  item.list[sliderIndex + 1] === optionSelect[sliderIndex + 1],\n              )\n              .some(item => item.list[sliderIndex] == optionIndex)\n          ) {\n            liRef.current.classList.add('none');\n          } else {\n            liRef.current.classList.remove('none');\n          }\n        }\n      }\n    }\n  }, [optionSelect, options]);\n\n  const onClickOption = useCallback(() => {\n    const selectedOption = optionSelect.map((item, index) => {\n      if (index === sliderIndex) {\n        return optionIndex + '';\n      } else {\n        return item;\n      }\n    });\n\n    if (liRef.current) {\n      if (liRef.current.classList.contains('none')) {\n        // 가능한 옵션 찾기\n        const availableOption = options.option\n          .filter(item => item.list[sliderIndex] == optionIndex)\n          .sort(\n            (x, y) =>\n              x.list.reduce((x, y) => x + y) - y.list.reduce((x, y) => x + y),\n          )[0];\n        setOptionSelect([...availableOption.list]);\n      } else {\n        if (sliderIndex + 1 === options.listName.length) {\n          setOptionSelect([...selectedOption]);\n          const optionAsin = options.option.filter(item =>\n            item.list.every(\n              (item, sliderIndex) => item === selectedOption[sliderIndex],\n            ),\n          )[0].asin;\n          router.push(`/product/${optionAsin}`);\n        } else {\n          setOptionSelect([...selectedOption]);\n        }\n      }\n    }\n  }, [optionSelect]);\n\n  return (\n    <li ref={liRef} onClick={onClickOption}>\n      <p className=\"optionName\">\n        {options.listValue[options.listName[sliderIndex]][optionIndex]}\n      </p>\n    </li>\n  );\n};\nexport default OptionSliderItem;\n"]},"metadata":{},"sourceType":"module"}