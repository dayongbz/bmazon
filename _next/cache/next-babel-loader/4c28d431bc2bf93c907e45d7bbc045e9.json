{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Header from '../components/header';\nimport withRedux from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport reducer from '../reducers';\nimport UseEffect_app from '../components/useEffect_app';\n\nconst App = ({\n  Component,\n  store,\n  pageProps\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    store: store\n  }, __jsx(Head, null, __jsx(\"title\", null, \"bmazon\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"/static/style/reset.css\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"/static/style/_app.css\"\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Noto+Sans+KR:400,700&display=swap\",\n    rel: \"stylesheet\"\n  })), __jsx(Header, null), __jsx(\"div\", {\n    id: \"mainWrapper\",\n    style: {\n      marginTop: '40px'\n    }\n  }, __jsx(UseEffect_app, null, __jsx(Component, pageProps)))));\n};\n\nApp.getInitialProps = async context => {\n  const {\n    ctx,\n    Component\n  } = context;\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n\n  return {\n    pageProps\n  };\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(App);","map":null,"metadata":{},"sourceType":"module"}