{"ast":null,"code":"import { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { EXCHANGE_RATE_REQUEST, EXCHANGE_RATE_SUCCESS, EXCHANGE_RATE_FAILURE } from '../reducers/exchange';\n\nfunction getExchangeRateAPI() {\n  return axios.get('/static/finace.json');\n}\n\nfunction* getExchangeRate() {\n  try {\n    const result = yield call(getExchangeRateAPI);\n    yield put({\n      type: EXCHANGE_RATE_SUCCESS,\n      data: {\n        rate: result.data[0].cashBuyingPrice,\n        date: result.data[0].date,\n        time: result.data[0].time,\n        provider: result.data[0].provider\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: EXCHANGE_RATE_FAILURE\n    });\n  }\n}\n\nfunction* watchExchange() {\n  yield takeEvery(EXCHANGE_RATE_REQUEST, getExchangeRate);\n}\n\nexport default function* exchangeSaga() {\n  yield all([fork(watchExchange)]);\n}","map":{"version":3,"sources":["/Users/dayong/Desktop/dev/bmazon/sagas/exchange.js"],"names":["all","fork","takeEvery","call","put","axios","EXCHANGE_RATE_REQUEST","EXCHANGE_RATE_SUCCESS","EXCHANGE_RATE_FAILURE","getExchangeRateAPI","get","getExchangeRate","result","type","data","rate","cashBuyingPrice","date","time","provider","e","console","error","watchExchange","exchangeSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,GAArC,QAAgD,oBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,sBAJP;;AAMA,SAASC,kBAAT,GAA8B;AAC5B,SAAOJ,KAAK,CAACK,GAAN,CAAU,qBAAV,CAAP;AACD;;AAED,UAAUC,eAAV,GAA4B;AAC1B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACM,kBAAD,CAAzB;AACA,UAAML,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEN,qBADE;AAERO,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEH,MAAM,CAACE,IAAP,CAAY,CAAZ,EAAeE,eADjB;AAEJC,QAAAA,IAAI,EAAEL,MAAM,CAACE,IAAP,CAAY,CAAZ,EAAeG,IAFjB;AAGJC,QAAAA,IAAI,EAAEN,MAAM,CAACE,IAAP,CAAY,CAAZ,EAAeI,IAHjB;AAIJC,QAAAA,QAAQ,EAAEP,MAAM,CAACE,IAAP,CAAY,CAAZ,EAAeK;AAJrB;AAFE,KAAD,CAAT;AASD,GAXD,CAWE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMhB,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL;AADE,KAAD,CAAT;AAGD;AACF;;AAED,UAAUe,aAAV,GAA0B;AACxB,QAAMrB,SAAS,CAACI,qBAAD,EAAwBK,eAAxB,CAAf;AACD;;AAED,eAAe,UAAUa,YAAV,GAAyB;AACtC,QAAMxB,GAAG,CAAC,CAACC,IAAI,CAACsB,aAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  EXCHANGE_RATE_REQUEST,\n  EXCHANGE_RATE_SUCCESS,\n  EXCHANGE_RATE_FAILURE,\n} from '../reducers/exchange';\n\nfunction getExchangeRateAPI() {\n  return axios.get('/static/finace.json');\n}\n\nfunction* getExchangeRate() {\n  try {\n    const result = yield call(getExchangeRateAPI);\n    yield put({\n      type: EXCHANGE_RATE_SUCCESS,\n      data: {\n        rate: result.data[0].cashBuyingPrice,\n        date: result.data[0].date,\n        time: result.data[0].time,\n        provider: result.data[0].provider,\n      },\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: EXCHANGE_RATE_FAILURE,\n    });\n  }\n}\n\nfunction* watchExchange() {\n  yield takeEvery(EXCHANGE_RATE_REQUEST, getExchangeRate);\n}\n\nexport default function* exchangeSaga() {\n  yield all([fork(watchExchange)]);\n}\n"]},"metadata":{},"sourceType":"module"}