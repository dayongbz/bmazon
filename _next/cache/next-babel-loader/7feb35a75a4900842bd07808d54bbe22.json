{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport cheerio from 'cheerio';\nimport { PRODUCT_INFORMATION_SUCCESS, PRODUCT_INFORMATION_REQUEST, PRODUCT_INFORMATION_FAILURE, PRODUCT_OPTION_INFORMATION_REQUEST, PRODUCT_OPTION_INFORMATION_SUCCESS, PRODUCT_OPTION_INFORMATION_FAILURE } from '../reducers/product';\n\nfunction getProductInfoAPI({\n  asin\n}) {\n  return axios(`/api/product/${asin}`);\n}\n\nfunction* getProductInfo(action) {\n  try {\n    const result = yield call(getProductInfoAPI, action.data);\n    const $ = yield cheerio.load(result.data);\n    const category = [];\n    const optionDatas = [];\n    const options = {\n      option: []\n    };\n    yield $('div#breadcrumb_feature_div a.a-link-child').each((i, elem) => {\n      category.push($(elem).text().trim());\n    });\n    yield $('script').filter((i, e) => {\n      const data = $(e).data('a-state');\n\n      if (typeof data === 'object') {\n        return data.key === 'mobile-twister-dim-val-list' || data.key === 'mobile-twister-dims-to-asin-list' || data.key === 'mobile-twister-dim-list';\n      }\n    }).each((i, e) => {\n      optionDatas[$(e).data('a-state').key] = JSON.parse($(e)[0].firstChild.data);\n    });\n    yield (() => {\n      options.listName = optionDatas['mobile-twister-dim-list'].key;\n      options.listValue = optionDatas['mobile-twister-dim-val-list'];\n\n      const key = _Object$keys(optionDatas['mobile-twister-dims-to-asin-list']).map(item => item.match(/(\\d)/g));\n\n      const value = _Object$values(optionDatas['mobile-twister-dims-to-asin-list']);\n\n      options.option = key.map((item, index) => ({\n        asin: value[index],\n        list: item\n      }));\n    })(); // 늦게 로딩되는 이미지 로딩\n\n    yield $('div#aplus_feature_div').children('div').find('img').filter((i, e) => $(e).hasClass('a-lazy-loaded')).each((i, e) => {\n      $(e).attr('src', $(e).data('src'));\n    });\n    yield put({\n      type: PRODUCT_INFORMATION_SUCCESS,\n      data: {\n        imageUrl: $('img#main-image').data('a-hires'),\n        price: $('div#cerberus-data-metrics').data('asin-price') || $('#priceblock_ourprice').text().trim().substring(1),\n        name: $('span#title').text().trim(),\n        category: category,\n        details: $('div#aplus3p_feature_div').length !== 0 ? $('div#aplus3p_feature_div').children('div').html() : $('div#aplus_feature_div').children('div').html(),\n        options: options\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: PRODUCT_INFORMATION_FAILURE\n    });\n  }\n}\n\nfunction* watchProductInfo() {\n  yield takeEvery(PRODUCT_INFORMATION_REQUEST, getProductInfo);\n}\n\nfunction getOptionAPI(data) {\n  return axios(`/api/product/option/${data.asin}`);\n}\n\nfunction* getOptionInfo(action) {\n  try {\n    let data = yield call(getOptionAPI, action.data);\n    data = yield data.data.filter(item => item.asin === action.data.asin)[0];\n    console.log(data, action.data.asin, action.data.index);\n    yield put({\n      type: PRODUCT_OPTION_INFORMATION_SUCCESS,\n      data: {\n        imageUrl: data.imageUrl,\n        asin: action.data.asin,\n        index: action.data.index\n      }\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: PRODUCT_OPTION_INFORMATION_FAILURE\n    });\n  }\n}\n\nfunction* watchOptionInfo() {\n  yield takeEvery(PRODUCT_OPTION_INFORMATION_REQUEST, getOptionInfo);\n}\n\nexport default function* productSaga() {\n  yield all([fork(watchProductInfo), fork(watchOptionInfo)]);\n}","map":null,"metadata":{},"sourceType":"module"}