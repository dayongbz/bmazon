{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport CategoryTag from './categoryTag';\nimport formattingComma from '../../function/formattingComma';\nimport OptionsWrapper from './optionsWrapper';\nimport OptionSliderList from './optionSliderList';\nimport { ProductDetailsWrapperStyled, ProductCategoryWrapper, ProductPrice, ExchangeRateDate, ShipPrice, ProductButtonWrapper } from '../../styled-components/product/productDetailsWrapper';\n\nconst ProductDetailsWrapper = () => {\n  const {\n    rate,\n    date,\n    time\n  } = useSelector(state => state.exchange);\n  const {\n    name,\n    price,\n    category,\n    asin,\n    options,\n    imageUrl\n  } = useSelector(state => state.product);\n  const {\n    0: dimmed,\n    1: setDimmed\n  } = useState('none');\n  const {\n    0: optionSelect,\n    1: setOptionSelect\n  } = useState([]);\n  useEffect(() => {\n    if (options) {\n      setOptionSelect([...options.option.filter(item => item.asin === asin)[0].list]);\n    }\n  }, [options]);\n  const onClickOption = useCallback(e => {\n    if (dimmed === 'none') {\n      setDimmed('block');\n    } else {\n      setDimmed('none');\n    }\n  }, [dimmed]);\n  return __jsx(ProductDetailsWrapperStyled, null, __jsx(\"p\", {\n    className: \"title\"\n  }, name && name), __jsx(ProductCategoryWrapper, null, category && category.map(item => __jsx(CategoryTag, {\n    key: item,\n    text: item\n  }))), __jsx(ProductPrice, null, __jsx(\"span\", {\n    className: \"main\"\n  }, price && rate && `₩${formattingComma(price * rate, true)}`), __jsx(\"span\", {\n    className: \"sub\"\n  }, price && `\\$${formattingComma(price)}`)), __jsx(ExchangeRateDate, null, __jsx(\"span\", {\n    className: \"main\"\n  }, rate && `$1 = ₩${formattingComma(rate)}`), rate && date && time && `(${date} ${time.substring(0, 5)} 기준)`), __jsx(ShipPrice, null, \"\\uBC30\\uC1A1\\uBE44\", __jsx(\"span\", {\n    className: \"main\"\n  }, rate && `₩${formattingComma(7.89 * rate, true)}`)), options && options.listName.map((item, index) => {\n    return __jsx(OptionsWrapper, {\n      options: options,\n      click: onClickOption,\n      img: imageUrl,\n      index: index,\n      selectedAsin: asin,\n      key: item + 'OptionsWrapper',\n      listType: item\n    });\n  }), __jsx(\"div\", {\n    id: \"dimmedOption\",\n    style: {\n      display: dimmed\n    }\n  }, __jsx(\"div\", {\n    id: \"optionBackground\",\n    onClick: onClickOption\n  }), __jsx(\"div\", {\n    id: \"optionSliderWrapper\"\n  }, options && options.listName.map((sliderItem, sliderIndex) => {\n    return __jsx(OptionSliderList, {\n      sliderItem: sliderItem,\n      sliderIndex: sliderIndex,\n      options: options,\n      key: sliderItem + `listName`,\n      asin: asin,\n      optionSelect: optionSelect,\n      setOptionSelect: setOptionSelect\n    });\n  }))), __jsx(ProductButtonWrapper, null, __jsx(\"button\", {\n    className: \"productHeartButton\"\n  }, __jsx(\"img\", {\n    src: \"/static/images/favorite_border-24px.svg\",\n    width: \"17\",\n    alt: \"\\uCC1C\\uD558\\uAE30 \\uBC84\\uD2BC\"\n  }), \"\\uCC1C\\uD558\\uAE30\"), __jsx(\"button\", {\n    className: \"productShareButton\"\n  }, __jsx(\"img\", {\n    src: \"/static/images/share-24px.svg\",\n    width: \"17\",\n    alt: \"\\uACF5\\uC720\\uD558\\uAE30 \\uBC84\\uD2BC\"\n  }), \"\\uACF5\\uC720\\uD558\\uAE30\")));\n};\n\nexport default ProductDetailsWrapper;","map":{"version":3,"sources":["/Users/dayong/Desktop/dev/bmazon/components/product/productDetailsWrapper.jsx"],"names":["React","useState","useCallback","useEffect","useSelector","CategoryTag","formattingComma","OptionsWrapper","OptionSliderList","ProductDetailsWrapperStyled","ProductCategoryWrapper","ProductPrice","ExchangeRateDate","ShipPrice","ProductButtonWrapper","ProductDetailsWrapper","rate","date","time","state","exchange","name","price","category","asin","options","imageUrl","product","dimmed","setDimmed","optionSelect","setOptionSelect","option","filter","item","list","onClickOption","e","map","substring","listName","index","display","sliderItem","sliderIndex"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport CategoryTag from './categoryTag';\nimport formattingComma from '../../function/formattingComma';\nimport OptionsWrapper from './optionsWrapper';\nimport OptionSliderList from './optionSliderList';\nimport {\n  ProductDetailsWrapperStyled,\n  ProductCategoryWrapper,\n  ProductPrice,\n  ExchangeRateDate,\n  ShipPrice,\n  ProductButtonWrapper,\n} from '../../styled-components/product/productDetailsWrapper';\n\nconst ProductDetailsWrapper = () => {\n  const { rate, date, time } = useSelector(state => state.exchange);\n  const { name, price, category, asin, options, imageUrl } = useSelector(\n    state => state.product,\n  );\n\n  const [dimmed, setDimmed] = useState('none');\n  const [optionSelect, setOptionSelect] = useState([]);\n\n  useEffect(() => {\n    if (options) {\n      setOptionSelect([\n        ...options.option.filter(item => item.asin === asin)[0].list,\n      ]);\n    }\n  }, [options]);\n\n  const onClickOption = useCallback(\n    e => {\n      if (dimmed === 'none') {\n        setDimmed('block');\n      } else {\n        setDimmed('none');\n      }\n    },\n    [dimmed],\n  );\n\n  return (\n    <ProductDetailsWrapperStyled>\n      <p className=\"title\">{name && name}</p>\n      <ProductCategoryWrapper>\n        {category &&\n          category.map(item => (\n            <CategoryTag key={item} text={item}></CategoryTag>\n          ))}\n      </ProductCategoryWrapper>\n      <ProductPrice>\n        <span className=\"main\">\n          {price && rate && `₩${formattingComma(price * rate, true)}`}\n        </span>\n        <span className=\"sub\">{price && `\\$${formattingComma(price)}`}</span>\n      </ProductPrice>\n      <ExchangeRateDate>\n        <span className=\"main\">{rate && `$1 = ₩${formattingComma(rate)}`}</span>\n        {rate && date && time && `(${date} ${time.substring(0, 5)} 기준)`}\n      </ExchangeRateDate>\n      <ShipPrice>\n        배송비\n        <span className=\"main\">\n          {rate && `₩${formattingComma(7.89 * rate, true)}`}\n        </span>\n      </ShipPrice>\n      {options &&\n        options.listName.map((item, index) => {\n          return (\n            <OptionsWrapper\n              options={options}\n              click={onClickOption}\n              img={imageUrl}\n              index={index}\n              selectedAsin={asin}\n              key={item + 'OptionsWrapper'}\n              listType={item}\n            ></OptionsWrapper>\n          );\n        })}\n\n      <div id=\"dimmedOption\" style={{ display: dimmed }}>\n        <div id=\"optionBackground\" onClick={onClickOption}></div>\n        <div id=\"optionSliderWrapper\">\n          {options &&\n            options.listName.map((sliderItem, sliderIndex) => {\n              return (\n                <OptionSliderList\n                  sliderItem={sliderItem}\n                  sliderIndex={sliderIndex}\n                  options={options}\n                  key={sliderItem + `listName`}\n                  asin={asin}\n                  optionSelect={optionSelect}\n                  setOptionSelect={setOptionSelect}\n                ></OptionSliderList>\n              );\n            })}\n        </div>\n      </div>\n      <ProductButtonWrapper>\n        <button className=\"productHeartButton\">\n          <img\n            src=\"/static/images/favorite_border-24px.svg\"\n            width=\"17\"\n            alt=\"찜하기 버튼\"\n          ></img>\n          찜하기\n        </button>\n        <button className=\"productShareButton\">\n          <img\n            src=\"/static/images/share-24px.svg\"\n            width=\"17\"\n            alt=\"공유하기 버튼\"\n          ></img>\n          공유하기\n        </button>\n      </ProductButtonWrapper>\n    </ProductDetailsWrapperStyled>\n  );\n};\n\nexport default ProductDetailsWrapper;\n"]},"metadata":{},"sourceType":"module"}