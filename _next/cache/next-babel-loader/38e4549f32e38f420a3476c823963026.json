{"ast":null,"code":"import { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { EXCHANGE_RATE_REQUEST, EXCHANGE_RATE_SUCCESS, EXCHANGE_RATE_FAILURE } from '../reducers/exchange';\n\nfunction getExchangeRateAPI() {\n  return axios.get('/static/finace.json');\n}\n\nfunction* getExchangeRate() {\n  try {\n    const result = yield call(getExchangeRateAPI);\n    yield put({\n      type: EXCHANGE_RATE_SUCCESS,\n      data: {\n        rate: result.data[0].cashBuyingPrice,\n        date: result.data[0].date,\n        time: result.data[0].time,\n        provider: result.data[0].provider\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: EXCHANGE_RATE_FAILURE\n    });\n  }\n}\n\nfunction* watchExchange() {\n  yield takeEvery(EXCHANGE_RATE_REQUEST, getExchangeRate);\n}\n\nexport default function* exchangeSaga() {\n  yield all([fork(watchExchange)]);\n}","map":null,"metadata":{},"sourceType":"module"}