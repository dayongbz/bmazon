{"version":3,"file":"static/webpack/static/development/pages/product.js.02389187bfbe33a52cc7.hot-update.js","sources":["webpack:///./components/product/productDetailsWrapper.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport CategoryTag from './categoryTag';\nimport formattingComma from '../../function/formattingComma';\nimport OptionsWrapper from './optionsWrapper';\nimport OptionSliderList from './optionSliderList';\nimport {\n  ProductDetailsWrapperStyled,\n  ProductCategoryWrapper,\n  ProductPrice,\n  ExchangeRateDate,\n  ShipPrice,\n  ProductButtonWrapper,\n  DimmedOption,\n} from '../../styled-components/product/productDetailsWrapper';\n\nconst ProductDetailsWrapper = () => {\n  const { rate, date, time } = useSelector(state => state.exchange);\n  const { name, price, category, asin, options, imageUrl } = useSelector(\n    state => state.product,\n  );\n\n  const [dimmed, setDimmed] = useState('none');\n  const [optionSelect, setOptionSelect] = useState([]);\n\n  useEffect(() => {\n    if (options) {\n      setOptionSelect([\n        ...options.option.filter(item => item.asin === asin)[0].list,\n      ]);\n    }\n  }, [options]);\n\n  const onClickOption = useCallback(\n    e => {\n      if (dimmed === 'none') {\n        setDimmed('block');\n      } else {\n        setDimmed('none');\n      }\n    },\n    [dimmed],\n  );\n\n  return (\n    <ProductDetailsWrapperStyled>\n      <p className=\"title\">{name && name}</p>\n      <ProductCategoryWrapper>\n        {category &&\n          category.map(item => (\n            <CategoryTag key={item} text={item}></CategoryTag>\n          ))}\n      </ProductCategoryWrapper>\n      <ProductPrice>\n        <span className=\"main\">\n          {price && rate && `₩${formattingComma(price * rate, true)}`}\n        </span>\n        <span className=\"sub\">{price && `\\$${formattingComma(price)}`}</span>\n      </ProductPrice>\n      <ExchangeRateDate>\n        <span className=\"main\">{rate && `$1 = ₩${formattingComma(rate)}`}</span>\n        {rate && date && time && `(${date} ${time.substring(0, 5)} 기준)`}\n      </ExchangeRateDate>\n      <ShipPrice>\n        배송비\n        <span className=\"main\">\n          {rate && `₩${formattingComma(7.89 * rate, true)}`}\n        </span>\n      </ShipPrice>\n      {options &&\n        options.listName.map((item, index) => {\n          return (\n            <OptionsWrapper\n              options={options}\n              click={onClickOption}\n              img={imageUrl}\n              index={index}\n              selectedAsin={asin}\n              key={item + 'OptionsWrapper'}\n              listType={item}\n            ></OptionsWrapper>\n          );\n        })}\n\n      <DimmedOption style={{ display: dimmed }}>\n        <div id=\"optionBackground\" onClick={onClickOption}></div>\n        <div id=\"optionSliderWrapper\">\n          {options &&\n            options.listName.map((sliderItem, sliderIndex) => {\n              return (\n                <OptionSliderList\n                  sliderItem={sliderItem}\n                  sliderIndex={sliderIndex}\n                  options={options}\n                  key={sliderItem + `listName`}\n                  asin={asin}\n                  optionSelect={optionSelect}\n                  setOptionSelect={setOptionSelect}\n                ></OptionSliderList>\n              );\n            })}\n        </div>\n      </DimmedOption>\n      <ProductButtonWrapper>\n        <button className=\"productHeartButton\">\n          <img\n            src=\"/static/images/favorite_border-24px.svg\"\n            width=\"17\"\n            alt=\"찜하기 버튼\"\n          ></img>\n          찜하기\n        </button>\n        <button className=\"productShareButton\">\n          <img\n            src=\"/static/images/share-24px.svg\"\n            width=\"17\"\n            alt=\"공유하기 버튼\"\n          ></img>\n          공유하기\n        </button>\n      </ProductButtonWrapper>\n    </ProductDetailsWrapperStyled>\n  );\n};\n\nexport default ProductDetailsWrapper;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AADA;AAKA;AAAA;AAGA;AAAA;AAGA;AAAA;AAKA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAIA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AAAA;AAEA;AACA;AACA;AAHA;AAUA;AACA;AACA;;;;A","sourceRoot":""}